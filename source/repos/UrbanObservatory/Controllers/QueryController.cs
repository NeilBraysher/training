using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using UrbanObservatory.Model;

namespace UrbanObservatory.Controllers
{
    public class QueryController : Controller
    {
        public IActionResult Index()
        {
            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        public async Task<IActionResult> Query(string startTime, string endTime, string buffer, string bbox, string sensor_type)
        {
            QueryString queryString = new QueryString(startTime, endTime, buffer, bbox, sensor_type);
            UrbanObservatoryHTTP callout = new UrbanObservatoryHTTP();
            // method uses an HTTPClient factory to generate / reuse an instance of HTTPClient and pass it a query string generated by the queryString object. This
            // runs in an async wrapper (task) hence requires tostring to unwrap the data once returned
            Console.Write("heck!");
            string JSONData = await callout.GetJSONData(queryString.getQueryString());
            return new ContentResult { Content = JSONData };
            //return new ContentResult { Content = "Derp" };
        }
    }
}
